#include <bits/stdc++.h> 
void bfs(int node,int visit[],vector<int>&v,vector<int>adj[])
{
    visit[node]=1;
    queue<int>q;
    q.push(node);
    while(!q.empty())
    {
        int a=q.front();
        q.pop();
        v.push_back(a);
        for(auto it:adj[a])
        {
            if(!visit[it])
            {
                visit[it]=1;
                q.push(it);
            }
                
        }
    }
}
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    // Write your code here

    vector<int>adj[vertex];
    for(auto i:edges)
    {
        adj[i.first].push_back(i.second);
        adj[i.second].push_back(i.first);
        
    }
      for(int  i = 0;i<vertex;i++){

        sort(adj[i].begin(),adj[i].end());

    }
    int visit[vertex]={0};
    vector<int>v;
    for(int i=0;i<vertex;i++)
    {
        if(!visit[i])
        {
            bfs(i,visit,v,adj);
        }
    }
    return v;
}
