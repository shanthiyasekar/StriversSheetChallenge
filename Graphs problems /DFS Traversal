void dfs(int node,int visit[],vector<int>adj[],vector<int>&v)
{
    visit[node]=1;
    v.push_back(node);
    for(auto it:adj[node])
    {
        if(!visit[it])
        {
            dfs(it,visit,adj,v);
        }
    }
}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    // Write your code here
    vector<int>adj[V];
    for(int i=0;i<edges.size();i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
       adj[edges[i][1]].push_back(edges[i][0]);
    }

    int visit[V]={0};
    vector<vector<int>>ans;
    for(int i=0;i<V;i++)
    {
        if(!visit[i])
        {
            vector<int>v;
            dfs(i,visit,adj,v);
            ans.push_back(v);
        }
    }
    return ans;
}
