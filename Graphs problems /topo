#include <bits/stdc++.h> 
void dfs(int node,int visit[],stack<int>&s,vector<int>adj[])
{
    visit[node]=1;
    for (auto i : adj[node]) {
      if (!visit[i])
        dfs(i, visit, s, adj);
    }
    s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
        vector<int>adj[v];
        for(int i=0;i<edges.size();i++)
        {
            adj[edges[i][0]].push_back(edges[i][1]);
        }
        
        vector<int>ans;
	    stack<int>s;
	    int visit[v];
	    for(int i=0;i<v;i++)
	        visit[i]=0;
	    for(int i=0;i<v;i++)
	    {
	        if(!visit[i])
	        {
	            dfs(i,visit,s,adj);
	        }
	    }
	    while(!s.empty())
	    {
	        ans.push_back(s.top());
	        s.pop();
	    }
	    return ans;
}
